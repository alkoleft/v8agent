    
#Использовать "../src"
#Использовать "help"
#Использовать asserts

Функция ПолучитьСписокТестов(МенеджерТестирования) Экспорт

	МассивТестов = Новый Массив;
	МассивТестов.Добавить("ТестДолжен_ПолучитьВерсия");
	МассивТестов.Добавить("ТестДолжен_ПодключитьсяКИБ");
	МассивТестов.Добавить("ТестДолжен_ОтключитьсяОтИБ");
	МассивТестов.Добавить("ТестДолжен_ЗавершитьРаботуАгента");
	МассивТестов.Добавить("ТестДолжен_УстановитьЗначениеНастройки");
	МассивТестов.Добавить("ТестДолжен_ПолучитьЗначениеНастройки");
	МассивТестов.Добавить("ТестДолжен_ПолучитьСписокНастроек");
	МассивТестов.Добавить("ТестДолжен_ВыгрузитьКонфигурациюXML");
	МассивТестов.Добавить("ТестДолжен_ЗагрузитьКонфигурациюXML");
	МассивТестов.Добавить("ТестДолжен_ВыгрузитьВнешнуюОбработкуВXML");
	МассивТестов.Добавить("ТестДолжен_ЗагрузитьВнешнююОбработкуXML");
	МассивТестов.Добавить("ТестДолжен_ОбновитьКонфигурациюБД");
	МассивТестов.Добавить("ТестДолжен_ПолучитьСписокРазделителейИБ");
	МассивТестов.Добавить("ТестДолжен_ПолучитьНастройкиОтладчика");
	МассивТестов.Добавить("ТестДолжен_ВыполнитьКомандуАгент");
	МассивТестов.Добавить("ТестДолжен_ОбработатьОтветАгента");
	МассивТестов.Добавить("ТестДолжен_ПолучитьСоединение");

	Возврат МассивТестов;

КонецФункции

Процедура ПередЗапускомТеста() Экспорт

	ПомощникТестирования.СоздатьИБ();

КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт

	ПомощникТестирования.ОчиститьДанныеТестКейса();
	
КонецПроцедуры

#Область ШагиТеста

Процедура ТестДолжен_ВыполнитьКонвертациюОбработкиВXML() Экспорт

	Агент = ПомощникТестирования.СоздатьАгента();

	Каталог = ВременныеФайлы.СоздатьКаталог();
	
	ОбработкаИсходник = ОбъединитьПути(ПомощникТестирования.КаталогФикстур(), "ТестоваяОбработка.epf");
	Обработка = ОбъединитьПути(Каталог, "ТестоваяОбработка.epf");
	КопироватьФайл(ОбработкаИсходник, Обработка);

	Агент.ВыгрузитьВнешнуюОбработкуВXML(Обработка, Каталог);

	Ожидаем.Что(НайтиФайлы(Каталог, "*.xml", Истина).Количество(), "Некорреткное количество файлов выгрузки XML").Равно(3);

КонецПроцедуры

Процедура ТестДолжен_ОбработатьОшибкуКоманды() Экспорт

	Агент = ПомощникТестирования.СоздатьАгента();

	Каталог = ВременныеФайлы.СоздатьКаталог();
	
	Обработка = ОбъединитьПути(Каталог, "ТестоваяОбработка.epf");

	Агент.Подключиться();

	Результат = Агент.ВыгрузитьВнешнуюОбработкуВXML(Обработка, Каталог);

	Ожидаем.Что(Результат, "Ошибочная операция вернула успех").ЭтоЛожь();

КонецПроцедуры

Процедура ТестДолжен_ПолучитьВерсия() Экспорт

	ИспользуемаяВерсияПредприятия = ПомощникТестирования.ПолучитьВерсиюПредприятия();

	Агент = ПомощникТестирования.СоздатьАгента();
	Агент.Подключиться();

	ВерсияАгента = Агент.Версия();

	Ожидаем.Что(ИспользуемаяВерсияПредприятия, "Версия платформы не равна версии агента").Равно(ВерсияАгента);

КонецПроцедуры

#КонецОбласти

ПередЗапускомТеста();
ТестДолжен_ПолучитьВерсия();
ПослеЗапускаТеста();