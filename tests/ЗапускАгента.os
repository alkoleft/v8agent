    
#Использовать "../src"
#Использовать asserts
#Использовать tempfiles
#Использовать v8runner

Перем КаталогБазыАгента;
Перем Агент;

Функция ПолучитьСписокТестов(МенеджерТестирования) Экспорт

	МассивТестов = Новый Массив;
	МассивТестов.Добавить("ТестДолжен_ПроверитьСозданиеАгента");
	МассивТестов.Добавить("ТестДолжен_ПроверитьПодключениеКАгенту");
	МассивТестов.Добавить("ТестДолжен_ВыполнитьКонвертациюОбработкиВXML");

	Возврат МассивТестов;

КонецФункции

Процедура ПередЗапускомТеста() Экспорт

	КаталогБазыАгента = СоздатьИБ();

КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт

	Если Агент <> Неопределено Тогда

		Агент.ЗавершитьРаботуАгента();

	КонецЕсли;

	Агент = Неопределено;
	ВременныеФайлы.Удалить();

КонецПроцедуры

Процедура ТестДолжен_ПроверитьСозданиеАгента() Экспорт

	Агент = СоздатьАгента();
	Успех = Агент.Запустить();

	Если Успех Тогда

		Агент.ЗавершитьРаботуАгента();
		Агент = Неопределено;

	КонецЕсли;

	Ожидаем.Что(Успех, "Агент не запущен").ЭтоИстина();

КонецПроцедуры

Процедура ТестДолжен_ПроверитьПодключениеКАгенту() Экспорт

	СоздатьАгента().Запустить();

	Агент = СоздатьАгента();
	Успех = Агент.Подключиться();

	Если Успех Тогда

		Агент.Отключиться();

	КонецЕсли;

	Ожидаем.Что(Успех, "Не удалось подключиться к агенту").ЭтоИстина();

КонецПроцедуры

Процедура ТестДолжен_ВыполнитьКонвертациюОбработкиВXML() Экспорт

	Агент = СоздатьАгента();
	Агент.Запустить();

	Каталог = ВременныеФайлы.СоздатьКаталог();
	
	ОбработкаИсходник = ОбъединитьПути(КаталогФикстур(), "ТестоваяОбработка.epf");
	Обработка = ОбъединитьПути(Каталог, "ТестоваяОбработка.epf");
	КопироватьФайл(ОбработкаИсходник, Обработка);

	Агент.Подключиться();
	Агент.ВыгрузитьВнешнуюОбработкуВXML(Обработка, Каталог);

	Ожидаем.Что(НайтиФайлы(Каталог, "*.xml", Истина).Количество(), "Некорреткное количество файлов выгрузки XML").Равно(3);

КонецПроцедуры

#Область Служебные

Функция СоздатьАгента()

	Агент = (Новый АгентКонфигуратора())
		.УстановитьПараметрыБазы(СтрШаблон("/F ""%1""", КаталогБазыАгента), , ВременныеФайлы.СоздатьКаталог("v8agent-path"))
		.УстановитьПараметрыПодключения("localhost", 6777)
		.УстановитьПараметрыАвторизации("admin", "1");

	Возврат Агент;

КонецФункции

Функция СоздатьИБ()

	Для Каждого Файл Из НайтиФайлы(КаталогВременныхФайлов(), "*v8agent*") Цикл

		УдалитьФайлы(Файл.ПолноеИмя);

	КонецЦикла;

	ИмяКаталога = ВременныеФайлы.СоздатьКаталог("v8agent-db");

	Конфигуратор = Новый УправлениеКонфигуратором();
	Конфигуратор.СоздатьФайловуюБазу(ИмяКаталога);
	Конфигуратор.УстановитьКонтекст(СтрШаблон("/F ""%1""", ИмяКаталога), "", "");

	ФайлВыгрузки = ОбъединитьПути(КаталогФикстур(), "agent-db.dt");
	Конфигуратор.ЗагрузитьИнформационнуюБазу(ФайлВыгрузки);

	Возврат ИмяКаталога;

КонецФункции

Функция КаталогФикстур()

	Возврат ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures");

КонецФункции

#КонецОбласти

// ПередЗапускомТеста();
// ТестДолжен_ВыполнитьКонвертациюОбработкиВXML();
// ПослеЗапускаТеста();
